<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html id="designdetector-com" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link href="/css/style.css" rel="stylesheet" type="text/css"></link>
<script src="/jquery.js" type="text/javascript"></script>
<title>新鲜事模板管理</title>

<style type="text/css">
div.popup-editor {
  padding:20px;
  position:absolute;
  display:none;
  top:30px;left:60px;width:80%;height:80%;border:1px solid black;
  background-color:white;
  z-index:2;
}
.feed-key, .feed-key li {
  padding-left: 16px;
}
.minus {
  background: url("/minus.png") no-repeat scroll 2px 2px;
}
.plus {
  background: url("/plus.png") no-repeat scroll 2px 2px;
}

input.key {
  width:18%;
}

input.note {
  width:70%;
}
span.child-loop {
  display:none;
}
textarea {
  font-size: 14px;
  font-family: "Courier New",Verdana,Tahoma,STHeiTi,simsun,sans-serif;
  border:1px solid #bbb;
  width:98%;
}

input.add-child {
  border:0;
  width:0;
  height:16px;
  padding-left:13px;
  background: url(/small-icons.png) -14px;
  cursor:hand;
  cursor:pointer;
}

input.remove-child {
  border:0;
  width:0;
  height:16px;
  padding-left:13px;
  background: url(/small-icons.png) 2px;
  cursor:hand;
  cursor:pointer;
}
#tpl-editor {
  float:right;width:50%;height:560px;margin:4px;padding:2px;border:1px solid green;
}

#tpl-list {
  padding:4px;
  border:1px solid red;
  height:520px;
  overflow-y:auto;
}
div.tpl-container {
 margin:8px;padding:4px;border:1px solid blue;
}

li, #key-list, #key-list ol {
  list-style:none;
} 

div.popup-close {
  clear:both;float:right;margin:-12px -12px 8px 0;
}
</style>
<script type="text/javascript">
if (!window.console) {
  console = {
   "log" : function() {}
  }
}
function EditKeyListReset() {
  $('#key-list', $('#edit-keys')).children().remove();
}
function ReadonlyKeyListReset() {
  $('#readonly-key-list').children().remove();
}

function ShowEditKeys(b, stype, version, title) {
  if (b) {
    if (!version) {
      alert('请指定版本号');
      return;
    }
    EditKeyListReset();

    $('#cloud-bg').show();
    $('#edit-keys').show();
    var n = $('#edit-keys');
    $('span.stype_id', n).html(stype);
    $('span.stype_version', n).html(version);
    $('span.stype_title', n).html(title);
    $.ajax({
      'url' : '/get-stype-keys?stype=' + stype + '&version=' + version,
      'success' : function(text) {
          XmlKeyListAdd('#key-list', $(text));
      }
    });
  } else {
    $('#cloud-bg').hide();
    $('#edit-keys').hide();
  }
}

function ShowEditConfig(b, seq_id, stype, title) {
    var n = $('#edit-config');
    $.ajax({
      'url' : '/get-stype-config?id=' + stype,
      'success' : function(text){
          var n = $('#edit-config');
          var cfg = $.parseJSON(text);
          $('#stype-id', n).val(cfg.stype);
          $('#stype-id', n).attr('disabled', true);
          $('#stype-title', n).val(cfg.title);
          $('#stype-weight', n).val(cfg.weight);
          
          $("#stype-send-news", n).attr("checked", cfg.send_newsfeed);
          $('#news-merge-type option[value=' + cfg.news_merge_type + ']').attr('selected', 'selected');
          $('input:radio[name="news-merge-by"]', n).filter('[value="' + cfg.news_merge_by + '"]').attr('checked', true);
          
          $("#stype-send-mini", n).attr("checked", cfg.send_minifeed);
          $('#mini-merge-type option[value=' + cfg.mini_merge_type + ']').attr('selected', 'selected');
          $('input:radio[name="mini-merge-by"]', n).filter('[value="' + cfg.mini_merge_by + '"]').attr('checked', true);
          
          $('#extra-configs').val(cfg.extras);
      }
    });

    $('#save-config', n).click(
      function() {
        var n = $('#edit-config');
        var url='/save-stype-config?' + 'stype=' + encodeURIComponent($('#stype-id', n).val());
        var post_data = 'title=' + encodeURIComponent($('#stype-title', n).val()) + 
                   '&weight=' + $('#stype-weight', n).val() +
                   '&send-news=' + ($("#stype-send-news", n).attr("checked") ? 1 : 0) +
                   '&news-merge-type=' + $('#news-merge-type', n).val() +
                   '&news-merge-by=' + $("input[name='news-merge-by']:checked", n).val() +
                   '&send-mini=' + ($("#stype-send-mini", n).attr("checked") ? 1 : 0) +
                   '&mini-merge-type=' + $('#mini-merge-type', n).val() +
                   '&mini-merge-by=' + $("input[name='mini-merge-by']:checked", n).val() +
                   '&extra-configs=' + $("#extra-configs", n).val();
        if ($('#sequence-id').val()) {
          url += '&id=' + $('#sequence-id').val();
        }
        $.ajax(url, {
          'data' : post_data,
          'type' : 'POST',
          'success' : function(){
            alert('保存成功');
          },
          'error' : function(){
            alert('保存出错');
          }
        });
      }
    );
}
function TplListReset() {
  $('div.tpl-container', $('#tpl-list')).remove();
  $('#add-template-view').children().remove();
  $('#add-template-view').append($('<option></option><option value="1">1 home</option><option value="2">2 IM</option><option value="3">3 wap</option><option value="4">4 page</option>'));
}

function ShowEditTpl(b, stype, version, title) {
  if (b) {
    if (!version) {
      alert('请指定版本号');
      return;
    }

    $('#cloud-bg').show();
    $('#edit-tpl').show();
    ReadonlyKeyListReset();
    TplListReset();

    var n = $('#edit-tpl');
    $('span.stype_id', n).html(stype);
    $('span.stype_version', n).html(version);
    $('span.stype_title', n).html(title);

    $.ajax({
      'url' : '/get-stype-keys?stype=' + stype + '&version=' + version,
      'success' : function(text) {
          XmlKeyListAdd('#readonly-key-list', $(text));
          $('#readonly-key-list input').each(
             function() {
               $(this).attr('disabled', true);
             }
          );
          $('#readonly-key-list input.add-child, #readonly-key-list input.remove-child').each(
             function() {
               $(this).css('display', 'none');
             }
          );
      }
    });
    $.ajax('/get-stype-tpls?stype=' + stype + '&version=' + version, {
      success : function(text) {
        var tpl_map = eval('(' + text + ')');
        for(var k in tpl_map) {
          TplListAdd(k, tpl_map[k]);
        }
      },
      error : function() {
        alert('加载模板失败, 请刷新页面');
      }
    });
  } else {
    $('#cloud-bg').hide();
    $('#edit-tpl').hide();
  }
}
</script>
</head>
<body>
  <a href="#nogo" id="create-stype">新建stype</a>

  <table id="stype-list" bgcolor="#eff2fa" border="1">
  <tbody>
    <tr><td>序号</td><td>stype</td><td>描述信息</td><td>基本信息和配置</td><td>字段和模板管理</td><td>状态</td></tr>
  </tbody>
  </table>

  <iframe id="cloud-bg" style="position:absolute;display:none;z-index:1;border:0;padding:0;top:0;left:0;background-color:#999;opacity:.6;width:100%;height:100%;"></iframe>

  <div id="edit-config" class="popup-editor">
     <div class="popup-close"><a href="#nogo">关闭</a></div>
        stype <input type="text" size="6" id="stype-id" value=""/> 的配置信息. &nbsp; <a href="#nogo" id="save-config">保存</a><br/>
        描述:<input id="stype-title" size="12" type="text" value=""/><br/>
        权重:<input id="stype-weight" size="4" type="text" value=""/><br/>
        <div style="border:1px solid green;margin:4px;padding:4px;">feednews配置</br>
          发送newsfeed:<input id="stype-send-news" type="checkbox" checked/><br/>
          合并策略:<select id="news-merge-type">
                      <option value="0" selcted>0 不合并</option>
                      <option value="1" selcted>1 append</option>
                      <option value="2" selcted>2 replace</option>
                   </select><br/>
          <div id="news-merge-by-c"> 
             合并字段:
             <input type="radio" name="news-merge-by" value="" checked><label>无</label>
             <input type="radio" name="news-merge-by" value="owner"><label>owner</label>
             <input type="radio" name="news-merge-by" value="actor"><label>actor</label>
          </div>
        </div>
        <div style="border:1px solid green;margin:4px;padding:4px;">feedmini配置</br>
          发送minifeed:<input id="stype-send-mini" type="checkbox"/><br/>
          合并策略:<select id="mini-merge-type">
                      <option value="0" selcted>0 不合并</option>
                      <option value="1" selcted>1 append</option>
                      <option value="2" selcted>2 replace</option>
                   </select><br/>
          <div id="mini-merge-by-c"> 
            合并字段 :
            <input type="radio" name="mini-merge-by" value="" checked><label>无</label>
            <input type="radio" name="mini-merge-by" value="owner"><label>owner</label>
            <input type="radio" name="mini-merge-by" value="actor"><label>actor</label>
          </div>
        </div>
        extras:<input id="extra-configs" size="40" type="text" value="1"/>
  </div>

  <div id="edit-keys" class="popup-editor">
     <div class="popup-close"><a href="#nogo">关闭</a></div>
        stype <span class="stype_id"></span>(<span class="stype_title"></span>) 版本 <span class="stype_version"></span> 字段定义  <a href="#nogo" id="validate-keys">检查合法性</a> <a href="#nogo" id="save-keys">保存</a> <br/>
        <input type="text" id="add-key" class="add-child">
        <ol id="key-list" style="padding:0;margin:0;"></ol>
  </div>

  <div id="edit-tpl" class="popup-editor">
     <div class="popup-close"><a href="#nogo">关闭</a></div>
        stype <span class="stype_id"></span>(<span class="stype_title"></span>) 版本 <span class="stype_version"></span> 模板列表编辑. <a href="#nogo" id="add-template">新建模板</a>(类型=<select id="add-template-view"><option></option><option value="4">4 page</option></select>)
        <ol id="readonly-key-list" style="padding:0;margin:0;"></ol>
       <div id="tpl-list"></div>
  </div>
</body>
<script type="text/javascript">
  function JsonEscape(s) {
    var es = s.replace(/[\"\']/g, '\\\\\\\"');
    return es;
  }
  function GetKeysJson(root) {
    if(!root) {
      root = $("#key-list");
    }
    var nodes = $("li", root);
    var i = 0;
    var json = '[';
    nodes.each(
      function() {
        var n = $(this);
        if (!(n.parent().get(0) === root.get(0))) {
          return;
        }

        if (i > 0) {
          json += ",";
        }
        json += '{';
        var key = $('input.key', n).val();
        if (!key || key.length < 0) {
          alert('字段名不能为空');
          return '';
        }
        json += '"key":"' + key + '", ';
        var note = $('input.note', n).val();
        if (!note || note.length < 0) {
          alert('字段' + key + ' 描述不能为空');
          return '';
        }
        json += '"note":"' + JsonEscape(note) + '"';
        if (n.hasClass('multi')) {
          var kids = GetKeysJson($('ol', n));
          console.log('kids : ' + kids);
          var o = [];
          try {
            var o = $.parseJSON(kids); 
          } catch (e) {
            alert('子节点错误' + e);
            return '';
          }
          if (o && o.length > 0) {
            json += ', "kids":' + kids;
          }
        }
        json += '}';
        ++i;
      }
    );
    json += ']';
    console.log(json);
    return json;
  }

  function GetKeysXml(root) {
    if(!root) {
      root = $("#key-list");
    }
    var nodes = $("li", root);
    var i = 0;
    var json = '<keylist>';
    nodes.each(
      function() {
        var n = $(this);
        if (!(n.parent().get(0) === root.get(0))) {
          return;
        }

        var key = $('input.key', n).val();
        if (!key || key.length < 0) {
          alert('字段名不能为空');
          return '';
        }
        json += '<key>';
        json += '<name>' + key + '</name>';
        var note = $('input.note', n).val();
        if (!note || note.length < 0) {
          alert('字段' + key + ' 描述不能为空');
          return '';
        }
        json += '<note>' + encodeURIComponent(note) + '</note>';
        if (n.hasClass('multi')) {
          var kids = GetKeysXml($('ol', n));
          console.log('kids : ' + kids);
          if (kids.length > 0) {
            json += '<kids';
            if ($("input:checkbox", n).attr("checked")) {
              json += ' is_loop="1"';
            }
            json += '>' + kids + '</kids>';
          }
        }
        json += '</key>';
        ++i;
      }
    );
    json += '</keylist>';
    console.log(json);
    return json;
  }
  $('.feed-key.multi').click(
    function() {
      GetKeysJson();
      var n = $(this);
      if (n.hasClass('plus')) {
        n.removeClass('plus');
        n.addClass('minus');
        $('div', n).show();
      } else {
        n.removeClass('minus');
        $('div', n).hide();
        n.addClass('plus');
      }
    }
  );
</script>

<script type="text/javascript">

function KeyListAddChild(root, key, note, kids, is_loop) {
  if (root.hasClass('multi')) {
    root.removeClass('plus');
  } else {
    root.addClass('multi');
    $('span.child-loop', root).css('display', 'inline');
    root.click( function() {
        var t = $(this);
        if (t.hasClass('plus')) {
          t.removeClass('plus');
          t.addClass('minus');
          $('ol', t).show();
        } else {
          t.removeClass('minus');
          $('ol', t).hide();
          t.addClass('plus');
        }
      }
    );
  }
  root.addClass('minus');
  var ol = $($('ol', root).get(0));
  if (ol.length <= 0) {
    ol = $('<ol style="margin:3px 0 3px 1px; padding:0;list-style:none;"></ol>');
    root.append(ol);
  }
  var li = $('<li><input type="text" class="key" value="' + key + '"/><span class="child-loop"><input type="checkbox"/><label>子节点循环</label></span><input type="text" class="note"/><input type="text" class="add-child"/><input type="text" class="remove-child"/></li>');
  $('input.note', li).val(note);
  $('input:checkbox', li).attr('checked', is_loop);

  li.children().click(
    function(e) {
      e.cancelBubble = true;
      e.stopPropagation && e.stopPropagation();
    }
  );

  li.click(
    function(e) {
      e.cancelBubble = true;
      e.stopPropagation && e.stopPropagation();
    }
  );

  $('input.add-child', li).click(
    function(e) {
      KeyListAddChild(li, '', '') ;
    }
  );
  $('input.remove-child', li).click(
    function(e) {
      if(!confirm('确定删除该key吗?')) {
        return;
      }
      $(this).parent().remove();
    }
  );

  if (kids && kids.length) {
    for(var i = 0; i < kids.length; ++i) {
      KeyListAddChild(li, kids[i].key, kids[i].note, kids[i].kids);
    }
  }
  ol.append(li);
  ol.show();
  return li;
}

function XmlKeyListAddChild(root, xml_dom) {
  var child = xml_dom.children(':first-child').children('key');
  child.each(
    function() {
      var t = $(this);
      var kids = t.children('kids');
      var li = KeyListAddChild(root, t.children('name').text(), t.children('note').text(), null, kids.attr('is_loop'));
      if (kids && kids.length) {
        XmlKeyListAddChild(li, kids);
      }
    }
  );
}

function XmlKeyListAdd(root_selector, xml_dom) {
  // var child = xml_dom.children(':first-child');
  var child = xml_dom.children('key');
  child.each(
    function() {
      var t = $(this);
      var kids = t.children('kids');
      var root = KeyListAdd(root_selector, t.children('name').text(), t.children('note').text(), null, kids.attr('is_loop'));
      if (kids && kids.length) {
        XmlKeyListAddChild(root, kids);
      }
    }
  );
}

function KeyListAdd(root_id, key, note, kids, is_loop) {
  var n = $('<li class="feed-key"><input type="text" class="key" value="' + key 
        + '"/><span class="child-loop"><input type="checkbox"/><label>子节点循环</label></span>'
        + '<input type="text" class="note"/><input type="text" class="add-child"/>'
        + '<input type="text" class="remove-child" href="#nogo"/></li>');

    
  $('input.note', n).val(note);
  $('input:checkbox', n).attr('checked', is_loop);

  $('input.add-child', n).click(
    function(e) {
      KeyListAddChild(n, '', '') ;
    }
  );
  $('input.remove-child', n).click(
    function(e) {
      if(!confirm('确定删除该key吗?')) {
        return;
      }
      $(this).parent().remove();
    }
  );
  n.children().click(
    function(e) {
      e.cancelBubble = true;
      e.stopPropagation && e.stopPropagation();
    }
  );
  if (kids && kids.length) {
    for(var i = 0; i < kids.length; ++i) {
      KeyListAddChild(n, kids[i].key, kids[i].note, kids[i].kids);
    }
  }
  $(root_id).append(n);
  return n;
}

$('#add-key').click(
  function() {
    KeyListAdd('#key-list', '', '');
  }
);
function TplListAdd(view, tpl_content) {
  var view_desc = $('#add-template-view option[value="' + view + '"]').text();
  var div = $('<div class="tpl-container">view type:<span class="view-desc">' + view_desc + '</span><div style="float:right;font-size:12px;"><a href="#nogo" id="validate-template">检查合法性</a> <a href="#nogo" id="save-template">保存</a> <a href="#nogo" id="remove-template">删除</a> </div><br/><textarea rows="20">' + decodeURIComponent(tpl_content) + '</textarea></div>');
  $('#tpl-list').append(div);
  $('#validate-template', div).click(
    function() {
      var view_type = view;
      var textarea = $('textarea', div);
      return function() {
        var stype_id = $('#edit-tpl span.stype_id').text();
        var version = $('#edit-tpl span.stype_version').text();
        var tpl = textarea.val();
        var url = '/validate-tpl?stype=' + stype_id + '&version=' + version;
        $.ajax(url, {
          type: 'POST',
          data: 'tpl=' + encodeURIComponent(encodeURIComponent(tpl)), 
          context: document.body,
          success: function(msg){
            alert(decodeURIComponent(msg));
          },
          error: function(){
            alert('验证出错');
          }
        });
      };
    }()
  );
  $('#save-template', div).click(
    function() {
      var view_type = view;
      var textarea = $('textarea', div);
      return function() {
        var stype_id = $('#edit-tpl span.stype_id').text();
        var version = $('#edit-tpl span.stype_version').text();
        var tpl = textarea.val();
        var url = '/save-tpl?version=' + version
            + '&stype=' + stype_id + '&view=' + view_type;
        $.ajax(url, {
          type: 'POST',
          data: 'tpl=' + encodeURIComponent(encodeURIComponent(tpl)), 
          context: document.body,
          success: function(msg){
            alert(msg);
          },
          error: function(){
            alert('保存出错');
          }
        });
      };
    }()
  );

  $('#remove-template', div).click(
    function() {
      var view_type = view;
      return function() {
        if (!confirm('确定删除该模板吗?')) {
          return;
        }
        var stype_id = $('#edit-tpl span.stype_id').text();
        var version = $('#edit-tpl span.stype_version').text();
        var url = '/remove-tpl?stype=' + stype_id + '&version=' + version + '&view=' + view_type;
        $.ajax(url, {
          context: $(this).parent().parent(),
          success: function(msg){
            alert(msg);
            $(this).remove();
            var option = $('<option value="' + view_type + '">' + $('span.view-desc', $(this)).text() + '</option>');
            $("#add-template-view").append(option);
          },
          error: function(){
            alert('删除模板失败');
          }
        });
      };
    }()
  );
  $("#add-template-view option[value='" + view + "']").remove();
}
$('#add-template').click(
  function() {
    var view = $('#add-template-view').val();
    if(view.length <= 0) {
      alert('请指定模板view类型');
      return;
    }
    TplListAdd(view, '');
  }
);

</script>


</html>
